version: "3.9"
networks:
  cleanapi_net:
    driver: bridge

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cleanapi_api
    volumes:
      - ./volumes/logs:/app/Logs
      - ./volumes/appsettings/appsettings.json:/app/appsettings.json
      - ./publish:/app
    networks:
      - cleanapi_net
    expose:
      - 5060
    depends_on:
      - api-redis
      - api-db
    restart: on-failure

  api-db:
    image: mysql
    container_name: cleanapi_db
    environment:
      - MYSQL_ROOT_PASSWORD=admin
      - MYSQL_DATABASE=hangfire
    volumes:
      - ./volumes/database/data:/var/lib/mysql
    networks:
      - cleanapi_net
    expose:
      - 3306

  api-prometheus:
    image: "prom/prometheus"
    container_name: cleanapi_prometheus
    expose:
      - 9090
    environment:
      - TZ=America/Nassau
    volumes:
      - ./volumes/prom/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - cleanapi_net
    depends_on:
      - api

  api-redis:
    image: "redis:alpine"
    container_name: cleanapi_redis
    command: redis-server
    expose:
      - 6379
    networks:
      - cleanapi_net

  api-grafana:
    image: "grafana/grafana"
    container_name: cleanapi_grafana
    ports:
      - 7771:3000
    volumes:
      - ./volumes/grafana-data/data:/var/lib/grafana
    networks:
      - cleanapi_net
    depends_on:
      - api-prometheus

  api-nginx:
    image: nginx:alpine
    container_name: cleanapi_nginx
    volumes:
      - ./reverse-proxy/nginx.conf:/etc/nginx/nginx.conf
      - ./reverse-proxy/.htpasswd:/etc/nginx/.htpasswd
    networks:
      - cleanapi_net
    ports:
      - 7770:80
    depends_on:
      - api
      - adminer
    restart: on-failure

  adminer:
    container_name: cleanapi_adminer
    image: adminer
    restart: always
    expose:
      - 8080
    networks:
      - cleanapi_net
