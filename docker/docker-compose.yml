version: "3.9"
networks:
  cleanapi_net:
    driver: bridge

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cleanapi_api
    volumes:
      - .volumes/logs:/app/Logs
    networks:
      - cleanapi_net
    expose:
      - 80
    ports:
      - 2090:80
    depends_on:
      - api-redis
      - api-db
    # restart: on-failure

  api-db:
    image: postgres:alpine
    container_name: cleanapi_db
    environment:
      - POSTGRES_PASSWORD=admin
      - POSTGRES_USER=postgres
      - APP_DB_USER=docker
      - APP_DB_PASS=docker
      - APP_DB_NAME=appdatabase
      - JOBS_DB_NAME=hangfire
    volumes:
      - ./volumes/database/data:/var/lib/postgresql/data
      - ./volumes/database/scripts:/docker-entrypoint-initdb.d/
    networks:
      - cleanapi_net
    ports:
      - 5432:5432
    expose:
      - 5432

  api-prometheus:
    image: "prom/prometheus"
    container_name: cleanapi_prometheus
    expose:
      - 9090
    environment:
      - TZ=America/Nassau
    volumes:
      - ./volumes/prom/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - cleanapi_net
    depends_on:
      - api

  api-redis:
    image: "redis:alpine"
    container_name: cleanapi_redis
    command: redis-server
    expose:
      - 6379
    networks:
      - cleanapi_net

  api-grafana:
    image: "grafana/grafana"
    container_name: cleanapi_grafana
    expose:
      - 3000
    volumes:
      - ./volumes/grafana-data/data:/var/lib/grafana
    networks:
      - cleanapi_net
    depends_on:
      - api-prometheus

  api-nginx:
    image: nginx:alpine
    container_name: cleanapi_nginx
    volumes:
      - ./reverse-proxy/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - cleanapi_net
    ports:
      - 2080:80
    depends_on:
      - api
      - api-grafana

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "3050:80"
    networks:
      - cleanapi_net
